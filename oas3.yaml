openapi: 3.0.0
info:
  title: Vertice Test API
  description: API REST
  version: 1.0.0
  contact:
    name: Jorge Quintero
    email: jodaquin02@gmail.com

servers:
  - url: http://localhost:3001
    description: Local dev server

tags:
  - name: Auth
    description: Registro e inicio de sesión de usuarios
  - name: Users
    description: Gestión de usuarios
  - name: Products
    description: Gestión de productos
  - name: Orders
    description: Gestión de órdenes

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
        statusCode:
          type: integer
        error:
          type: string
      example:
        message: 'No autorizado'
        statusCode: 401
        error: 'Unauthorized'

    User:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        email:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Product:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        description:
          type: string
        price:
          type: number
        stock:
          type: number
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Order:
      type: object
      properties:
        _id:
          type: string
        userId:
          type: string
        products:
          type: array
          items:
            type: object
            properties:
              productId:
                type: string
              amount:
                type: number
        total:
          type: number
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

paths:
  /auth/register:
    post:
      tags:
        - Auth
      summary: Registrar nuevo usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - email
                - password
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: Usuario creado exitosamente

  /auth/login:
    post:
      tags:
        - Auth
      summary: Iniciar sesión
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login exitoso
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '404':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /me:
    get:
      tags:
        - Users
      summary: Obtener información del usuario autenticado
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Datos del usuario
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: usuario no autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /products:
    get:
      tags:
        - Products
      summary: Listar productos disponibles
      responses:
        '200':
          description: Lista de productos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'

  /products/{id}:
    get:
      tags:
        - Products
      summary: Obtener detalle de un producto
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          description: Id del producto
      responses:
        '200':
          description: Producto encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'

  /orders:
    post:
      tags:
        - Orders
      summary: Crear nueva orden
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                products:
                  type: array
                  items:
                    type: object
                    required:
                      - productId
                      - amount
                    properties:
                      productId:
                        type: string
                      amount:
                        type: number
      responses:
        '201':
          description: Orden creada correctamente

    get:
      tags:
        - Orders
      summary: Listar órdenes del usuario autenticado
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de órdenes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
